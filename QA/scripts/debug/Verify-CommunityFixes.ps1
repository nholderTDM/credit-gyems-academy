# Verify-CommunityFixes.ps1
Write-Host "üîç VERIFYING COMMUNITY FIXES" -ForegroundColor Cyan

# Check syntax error fix
Write-Host "`n1. Checking Test-ErrorScenarios.ps1..." -ForegroundColor Yellow
$errorTest = Get-Content "scripts\TS_CGA_v1\Test-ErrorScenarios.ps1" -Raw
if ($errorTest -notmatch '"/api/users/invalid-id",\)') {
    Write-Host "‚úÖ Syntax error fixed" -ForegroundColor Green
} else {
    Write-Host "‚ùå Syntax error still present" -ForegroundColor Red
}

# Test parse
try {
    [scriptblock]::Create($errorTest) | Out-Null
    Write-Host "‚úÖ Script parses correctly" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Script has syntax errors: $_" -ForegroundColor Red
}

# Check community test
Write-Host "`n2. Checking Community tests..." -ForegroundColor Yellow
$communityTest = Get-Content "scripts\TS_CGA_v1\Test-CommunityFlow.ps1" -Raw
if ($communityTest -match '/posts' -and $communityTest -match 'Headers \$authHeaders') {
    Write-Host "‚úÖ Community tests updated with auth headers" -ForegroundColor Green
    Write-Host "‚úÖ Using correct /posts endpoint" -ForegroundColor Green
} else {
    Write-Host "‚ùå Community tests may still have issues" -ForegroundColor Red
}

Write-Host "`n‚úÖ Verification complete!" -ForegroundColor Green
